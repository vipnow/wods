name: Daily IP Collection and Template Processing

on:
  #schedule:
    #- cron: '30 21 * * *'  # 每天北京时间早上5点30分执行
  repository_dispatch:
    types: [trigger-wods]
  workflow_dispatch:  # 手动触发

permissions:
  contents: write

jobs:
  process_files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set Git Identity
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Delete IP Folder
        run: |
          if [ -d "ip/" ]; then
            rm -rf ip/
            git rm -r --cached ip/
            git commit -m "Delete IP folder" || echo "No changes to commit"
          else
            echo "ip/ directory not found, skipping deletion"
          fi
        env:
          PAT: ${{ secrets.GITHUBS_TOKEN }}

      - name: Create IP and Template directories
        run: |
          mkdir -p ip
          mkdir -p template

      - name: List template directory
        run: ls -lR template

      - name: Download files to template directory
        run: |
          REPO="${{ secrets.ORIGIN_NAME }}/wods"
          BRANCH="main"
          DIR="template"
          API_URL="https://api.github.com/repos/$REPO/contents/$DIR?ref=$BRANCH"
          curl -s $API_URL | jq -r '.[] | select(.type=="file") | .download_url' | while read -r file_url; do
            file_name=$(basename "$file_url")
            curl -L -o "template/$file_name" "$file_url"
          done

      - name: Commit and push template changes
        run: |
          git add template/
          git status
          git commit -m "Update template files" || echo "No changes to commit"
          git pull origin main --rebase
          git push
        env:
          PAT: ${{ secrets.GITHUBS_TOKEN }}

      - name: List template files
        run: |
          find template -type f -name "*.txt" -print > template_files.txt
          cat template_files.txt

      - name: Copy and Rename Template File
        run: |
          if [ -f "template/ACM_ip.txt" ]; then
            cp template/ACM_ip.txt ip/ACM.txt
          else
            echo "template/ACM_ip.txt not found, skipping copy"
          fi

      - name: Extract IPs from template files
        run: |
          while IFS= read -r file; do
            filename=$(basename "$file" .txt)
            echo "Processing file: $filename"
            url_content=$(curl -sSL "https://raw.githubusercontent.com/${{ github.actor }}/dszb/main/speedtest/ip/${filename}.ip")
            if [[ -n "$url_content" && "$url_content" != "404: Not Found" ]]; then
              content=$(curl -sSL "https://raw.githubusercontent.com/${{ github.actor }}/dszb/main/speedtest/result/result_${filename}.txt" | awk '{print $2}')
              if [[ -n "$content" && "$content" != "404: Not Found" && "$content" != "Not" ]]; then
                echo "$content" > "ip/${filename}.txt"
                cat "ip/${filename}.txt"
              else
                echo "Skipping file: $filename because content is empty or '404: Not Found'"
              fi
            else
              echo "Skipping file: $filename because URL content is empty or '404: Not Found'"
            fi
          done < template_files.txt

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'

      - name: Download PHP Script
        run: |
          curl -o replace.php https://raw.githubusercontent.com/${{ secrets.ORIGIN_NAME }}/wods/main/replace.php

      - name: Execute PHP script to merge files
        run: php replace.php

      - name: List result directory contents
        run: |
          echo "Listing result directory"
          ls -R result
          echo "Content of result/all.txt"
          cat result/all.txt

      - name: Commit and push IP and result changes
        run: |
          git add ip/*.txt
          git add template/
          git add result/
          git add .
          git status
          git commit -m "Update IP and result files" || echo "No changes to commit"
          git pull origin main --rebase
          git push
        env:
          PAT: ${{ secrets.GITHUBS_TOKEN }}

      - name: Access autoUpdate URL
        run: |
          if [ -d "result/all.txt" ]; then
            curl -X GET "${{ secrets.AUTOUPDATE_URL }}?gh=${{ github.actor }}"
          else
            echo "result/all.txt not found, skipping autoUpdate URL"
          fi  
        continue-on-error: false

      - name: Delete Result Folder
        run: |
          if [ -d "result/" ]; then
            rm -rf result/
            git rm -r --cached result/
            git commit -m "Delete Result folder" || echo "No changes to commit"
            git pull --rebase
            git push
          else
            echo "result/ directory not found, skipping deletion"
          fi
        env:
          PAT: ${{ secrets.GITHUBS_TOKEN }}

      - name: Delete Template Folder
        run: |
          if [ -d "template/" ]; then
            rm -rf template/
            git rm -r --cached template/
            git commit -m "Delete Template folder" || echo "No changes to commit"
            git pull --rebase
            git push
          else
            echo "template/ directory not found, skipping deletion"
          fi
        env:
          PAT: ${{ secrets.GITHUBS_TOKEN }}

      - name: Scan and delete replace.php
        run: |
          if [ -f "replace.php" ]; then
            git rm --force replace.php
            git commit -m "Delete replace.php file" || echo "No changes to commit"
            git pull --rebase
            git push
          else
            echo "replace.php file not found, skipping deletion"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBS_TOKEN }}
          
      - name: Scan and delete template_files.txt
        run: |
          if [ -f "template_files.txt" ]; then
            git rm --force template_files.txt
            git commit -m "Delete template_files.txt file" || echo "No changes to commit"
            git pull --rebase
            git push
          else
            echo "replace.php file not found, skipping deletion"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBS_TOKEN }}
