name: Update IPTV

on:
  schedule:
    - cron: '02 22 * * *' # 每天的北京时间06:02启动 (UTC时间22:02)
  workflow_dispatch: # 手动触发

jobs:
  update-iptv:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install curl
      run: sudo apt-get install -y curl

    - name: Fetch IP data
      run: |
        mkdir -p result
        if [ -d "template" ] && [ "$(ls -A template/*.txt 2>/dev/null)" ]; then
          for template in template/*.txt; do
            region_name=$(basename $template .txt)
            curl -sf https://raw.githubusercontent.com/redrainl/iptv/main/speedtest/result/result_${region_name}.txt | while IFS= read -r line; do
              speed=$(echo $line | awk '{print $1}')
              ip_port=$(echo $line | awk '{print $2}')
              echo "${ip_port}" >> result/${region_name}_ips.txt
            done
            if grep -q "404: Not Found" result/${region_name}_ips.txt; then
              echo "Content not found for region ${region_name}, skipping."
              rm result/${region_name}_ips.txt
            fi
          done
        else
          echo "No template files found in template. Skipping fetch IP data step."
        fi

    - name: Update templates
      run: |
        if [ -d "template" ] && [ "$(ls -A template/*.txt 2>/dev/null)" ]; then
          for template in template/*.txt; do
            region_name=$(basename $template .txt)
            if [ -f "result/${region_name}_ips.txt" ]; then
              ips=$(cat result/${region_name}_ips.txt)
              template_content=$(cat $template)
              for ip in $ips; do
                template_content=$(echo "$template_content" | sed "s/ipipip/$ip/g")
              done
              echo "$template_content" > result/${region_name}.txt
            fi
          done
        else
          echo "No template files found in template. Skipping update templates step."
        fi

    - name: Combine results
      run: |
        if [ -d "result" ] && [ "$(ls -A result/*.txt 2>/dev/null)" ]; then
          rm -f result/all.txt
          for result in result/*.txt; do
            [[ $result == *"_ips.txt" ]] && continue
            genre=""
            while IFS= read -r line; do
              if [[ "$line" == *"#genre#"* ]]; then
                genre="$line"
                if ! grep -q "$genre" result/all.txt; then
                  echo "$genre" >> result/all.txt
                fi
              else
                echo "$line" >> result/all.txt
              fi
            done < "$result"
          done
        else
          echo "No result files found in result. Skipping combine results step."
        fi
